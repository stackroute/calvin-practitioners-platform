// @import '~@angular/material/theming';
// @include mat-core();
// $my-app-primary: mat-palette($mat-blue);
// $my-app-accent:  mat-palette($mat-yellow, 500, 900, A100);
// $my-app-background: mat-palette($mat-deep-orange);
// $my-app-theme: mat-light-theme($my-app-primary, $my-app-accent, $my-app-background);

// @include angular-material-theme($my-app-theme);

// .alternate-theme {
//   $alternate-primary: mat-palette($mat-light-blue);
//   $alternate-accent:  mat-palette($mat-yellow, 400);

//   $alternate-theme: mat-light-theme($alternate-primary, $alternate-accent);

//   @include angular-material-theme($alternate-theme);
// }

@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat-palette($mat-blue);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);






// Refer the below link for more details on theme
// https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1